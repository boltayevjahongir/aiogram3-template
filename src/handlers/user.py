from aiogram import Router, F
from aiogram.types import Message
from src.keyboards.inline_keyboards import language_selection_keyboard, cancel_order_keyboard
from src.keyboards.keyboards import cancel_keyboard, main_menu_keyboard, number_peoples_keyboard, summa_keyboard, \
    tel_nomer_keyboard, unfinished_keyboard, edit_order_keyboard, edit_people_keyboard, edit_summa_keyboard, \
    edit_tel_nomer_keyboard
from aiogram.fsm.context import FSMContext

from src.states.states import TaxiState
router: Router = Router()
lang = 'kz'
LANGUAGE_CHANGE_TEXTS = ["üí± –¢—ñ–ª–¥—ñ ”©–∑–≥–µ—Ä—Ç—É", "üí± –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"]

@router.message(lambda message: message.text in LANGUAGE_CHANGE_TEXTS)
async def change_language_handler(message: Message):
    """
    Foydalanuvchi "üí± –¢—ñ–ª–¥—ñ ”©–∑–≥–µ—Ä—Ç—É" yoki "üí± –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫" tugmasini bosganda.
    """
    keyboard = language_selection_keyboard()
    await message.answer("–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=keyboard)

CALL_TAXI_BUTTON = ["üöï –¢–∞–∫—Å–∏ —à–∞“õ—ã—Ä—É", "üöï –í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏"]
@router.message(lambda message: message.text in CALL_TAXI_BUTTON)
async def call_taxi_handler(message: Message, state: FSMContext):
    """
    Foydalanuvchi "üöï –í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏" yoki "üöï –¢–∞–∫—Å–∏ —à–∞“õ—ã—Ä—É" tugmasini bosganda.
    """
    answer_text = "–®—ã“ì–∞—Ç—ã–Ω –º–µ–∫–µ–Ω-–∂–∞–π—ã“£—ã–∑" if message.text == CALL_TAXI_BUTTON[0] else "–û—Ç–∫—É–¥–∞ –≤—ã–µ–∑–∂–∞–µ—Ç–µ?"
    cancel_k = cancel_keyboard(language=lang)
    await state.set_state("TaxiState:Location")

    await message.answer(answer_text, reply_markup=cancel_k)


CANCEL_BUTTON = ["üîô “ö–∞–π—Ç—É (–∞—Ä—Ç“õ–∞)", "üîô –ù–∞–∑–∞–¥"]

@router.message(lambda message: message.text in CANCEL_BUTTON)
async def cancel_handler(message: Message, state: FSMContext):
    """
    Foydalanuvchi "üîô “ö–∞–π—Ç—É (–∞—Ä—Ç“õ–∞)" yoki "üîô –ù–∞–∑–∞–¥" tugmasini bosganda.
    """
    await state.clear()
    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫ —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?", reply_markup=main_menu_keyboard(lang))


@router.message(TaxiState.Location)
async def start_taxi_order_l(message: Message, state: FSMContext):
    """
    Foydalanuvchi taksi buyurtma holatida "Boshlash" tugmasini bosganda.
    """
    await state.update_data(location=message.text)
    answer_text = "–ë–∞—Ä–∞—Ç—ã–Ω –º–µ–∫–µ–Ω-–∂–∞–π—ã“£—ã–∑?" if lang == 'kz' else "–ö—É–¥–∞ –µ–¥–µ—Ç–µ?"
    cancel_k = cancel_keyboard(language=lang)
    await state.set_state("TaxiState:Destination")

    await message.answer(answer_text, reply_markup=cancel_k)


@router.message(TaxiState.Destination)
async def start_taxi_order_d(message: Message, state: FSMContext):
    """
    Foydalanuvchi taksi buyurtma holatida "Boshlash" tugmasini bosganda.
    """
    await state.update_data(destination=message.text)
    answer_text = "–ù–µ—à–µ –∞–¥–∞–º –æ—Ç—ã—Ä–∞—Å—ã–∑–¥–∞—Ä?" if lang == 'kz' else "–°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤—ã –±—É–¥–µ—Ç–µ?"
    number_peoples = number_peoples_keyboard(language=lang)
    await state.set_state("TaxiState:Number_People")

    await message.answer(answer_text, reply_markup=number_peoples)


@router.message(TaxiState.Number_People)
async def start_taxi_order_n(message: Message, state: FSMContext):
    """
    Foydalanuvchi taksi buyurtma holatida "Boshlash" tugmasini bosganda.
    """
    msg = message.text
    if msg not in ["1", "2", "3", "4"]:
        answer_text = "–¢”©–º–µ–Ω–¥–µ –±–µ—Ä—ñ–ª–≥–µ–Ω —Ç“Ø–π–º–µ–ª–µ—Ä–¥—ñ “ì–∞–Ω–∞ –ø–∞–π–¥–∞–ª–∞–Ω—ã“£—ã–∑!" if lang == 'kz' else "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∏–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏!"
        return await message.answer(answer_text)

    await state.update_data(number_people=message.text)
    answer_text = "“∞—Å—ã–Ω–∞—Ç—ã–Ω –±–∞“ì–∞“£—ã–∑ (‚Ç∏)? –ë–∞“ì–∞–Ω—ã —Å–∞–Ω —Ä–µ—Ç—ñ–Ω–¥–µ —Ç”©–º–µ–Ω–¥–µ –∂–∞–∑—Å–∞“£—ã–∑ –±–æ–ª–∞–¥—ã." if lang == 'kz' else "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞–∫–∞–∑–∞"
    summa = summa_keyboard(language=lang)
    await state.set_state("TaxiState:Summa")

    await message.answer(answer_text, reply_markup=summa)

@router.message(TaxiState.Summa)
async def start_taxi_order_s(message: Message, state: FSMContext):
    """
    Foydalanuvchi taksi buyurtma holatida "Boshlash" tugmasini bosganda.
    """
    msg = message.text
    if not msg.isdigit():
        answer_text = "–ë–∞“ì–∞–Ω—ã —Å–∞–Ω —Ä–µ—Ç—ñ–Ω–¥–µ –∫”©—Ä—Å–µ—Ç—É “õ–∞–∂–µ—Ç!" if lang == 'kz' else "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞!"
        return await message.answer(answer_text)

    await state.update_data(summa=message.text)
    answer_text = "–¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä—ñ“£—ñ–∑?" if lang == 'kz' else "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    cancel_k = tel_nomer_keyboard(language=lang)
    await state.set_state("TaxiState:Tel_Nomer")

    await message.answer(answer_text, reply_markup=cancel_k)


@router.message(TaxiState.Tel_Nomer)
async def start_taxi_order_t(message: Message, state: FSMContext):
    """
    Foydalanuvchi taksi buyurtma holatida "Boshlash" tugmasini bosganda.
    """
    if message.contact:
        keyboard = unfinished_keyboard(lang)
        await state.update_data(tel_nomer=message.contact.phone_number)
        await state.set_state("TaxiState:UnFinished")
        location = (await state.get_data()).get("location")
        destination = (await state.get_data()).get("destination")
        number_people = (await state.get_data()).get("number_people")
        summa = (await state.get_data()).get("summa")
        tel_nomer = (await state.get_data()).get("tel_nomer")
        answer_kz = f"–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É “Ø—à—ñ–Ω —Ä–∞—Å—Ç–∞—É “õ–∞–∂–µ—Ç\n\n<b>“ö–∞–π–¥–∞–Ω</b>: {location}\n<b>“ö–∞–π–¥–∞</b>: {destination}\n<b>–ê–¥–∞–º —Å–∞–Ω—ã</b>: {number_people}\n<b>–ë–∞“ì–∞—Å—ã:</b>: {summa}‚Ç∏\n<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: {tel_nomer}\n\n–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã —Ä–∞—Å—Ç–∞—É “Ø—à—ñ–Ω - ‚úÖ –¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω —Ç–∞“£–¥–∞—É “õ–∞–∂–µ—Ç"
        answer_ru = f"–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å\n\n<b>–û—Ç–∫—É–¥–∞</b>: {location}\n<b>–ö—É–¥–∞</b>: {destination}\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤:</b>: {number_people}\n<b>–¶–µ–Ω–∞:</b>: {summa}‚Ç∏\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>: {tel_nomer}\n\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É - ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑"
        if lang == 'kz':
            await message.answer(answer_kz, reply_markup=keyboard, parse_mode="HTML")
        else:
            await message.answer(answer_ru, reply_markup=keyboard, parse_mode="HTML")
    else:
        answer_text = "–¢–µ–ª–µ—Ñ–æ–Ω —Ñ–æ—Ä–º–∞—Ç—ã “õ–∞—Ç–µ" if lang == 'kz' else "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞!"
        return await message.answer(answer_text)


CONFIRM_ORDER_BTN = ["‚úÖ –¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É", "‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑"]
@router.message(TaxiState.UnFinished, lambda message: message.text in CONFIRM_ORDER_BTN)
async def confirm_handler_uf(message: Message, state: FSMContext):
    """
        ‚úÖ –¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É
    """
    answer_ru = """–î–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞\n\n–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞...\n\n- –í–æ–¥–∏—Ç–µ–ª—å —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏\n\nTelegram, –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞: <b>ZAISAN TAXI!</b>"""
    answer_kz = """–ñ–∞—É–∞–ø—Ç—ã –∫“Ø—Ç—ñ“£—ñ–∑\n\n–¢–∞–ø—Å—ã—Ä—ã—Å ”©“£–¥–µ–ª—É–¥–µ...\n\n- –ñ“Ø—Ä–≥—ñ–∑—É—à—ñ —Å—ñ–∑–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å–∞—Ç—ã–Ω –±–æ–ª–∞–¥—ã\n\nTelegram, <b>ZAISAN TAXI</b> —Å–µ—Ä–≤–∏—Å—ñ–Ω “õ–æ–ª–¥–∞–Ω“ì–∞–Ω—ã“£—ã–∑“ì–∞ –†–∞—Ö–º–µ—Ç!"""
    await state.set_state("TaxiState:Finish")

    if lang == 'kz':
        await message.answer(answer_kz, reply_markup=cancel_order_keyboard(lang), parse_mode='HTML')
        await message.answer('üöñ')

    else:
        await message.answer(answer_ru, reply_markup=cancel_order_keyboard(lang), parse_mode='HTML')
        await message.answer('üöñ')

EDIT_ORDER_BTN = ["üñä ”®–∑–≥–µ—Ä—ñ—Å –µ“£–≥—ñ–∑—É", "üñä –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑"]
@router.message(TaxiState.UnFinished, lambda message: message.text in EDIT_ORDER_BTN)
async def edit_handler_uf(message: Message, state: FSMContext):
    """
        üñä ”®–∑–≥–µ—Ä—ñ—Å –µ“£–≥—ñ–∑—É
    """
    answer_text = "”®–∑–≥–µ—Ä—Ç—É “Ø—à—ñ–Ω “õ–∞–∂–µ—Ç—Ç—ñ “±—è—à—ã“õ—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑" if lang == 'kz' else "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å"
    await message.answer(answer_text, reply_markup=edit_order_keyboard(language=lang))





EDIT_ORDER_BTNS = ["üåç –®—ã“ì–∞—Ç—ã–Ω –º–µ–∫–µ–Ω–∂–∞–π", "üåç –ë–∞—Ä–∞—Ç—ã–Ω –º–µ–∫–µ–Ω–∂–∞–π", "üë• –ê–¥–∞–º —Å–∞–Ω—ã", "üí∞ –ñ–æ–ª –∞“õ—ã—Å—ã", "üì± –¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä", "üåç –ú–µ—Å—Ç–æ –≤—ã–∑–æ–≤–∞", "üåç –ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–ø—Ä–∏–±—ã—Ç–∏—è)", "üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤", "üí∞ –¶–µ–Ω–∞ –∑–∞–∫–∞–∑–∞", "üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"]
@router.message(TaxiState.UnFinished, lambda message: message.text in EDIT_ORDER_BTNS)
async def edit_order_btn(message: Message, state: FSMContext):
    """
        üåç –®—ã“ì–∞—Ç—ã–Ω –º–µ–∫–µ–Ω–∂–∞–π
    """
    if message.text == EDIT_ORDER_BTNS[0]:
        answer_text = "–®—ã“ì–∞—Ç—ã–Ω –º–µ–∫–µ–Ω-–∂–∞–π—ã“£—ã–∑" if lang == 'kz' else "–û—Ç–∫—É–¥–∞ –≤—ã–µ–∑–∂–∞–µ—Ç–µ?"
        await state.set_state("TaxiState:Edit_Location")
        await message.answer(answer_text)
    elif message.text == EDIT_ORDER_BTNS[1]:
        answer_text = "–ë–∞—Ä–∞—Ç—ã–Ω –º–µ–∫–µ–Ω-–∂–∞–π—ã“£—ã–∑?" if lang == 'kz' else "–ö—É–¥–∞ –µ–¥–µ—Ç–µ?"
        await state.set_state("TaxiState:Edit_Destination")
        await message.answer(answer_text)
    elif message.text == EDIT_ORDER_BTNS[2]:
        answer_text = "–ù–µ—à–µ –∞–¥–∞–º –æ—Ç—ã—Ä–∞—Å—ã–∑–¥–∞—Ä?" if lang == 'kz' else "–°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤—ã –±—É–¥–µ—Ç–µ?"
        await state.set_state("TaxiState:Edit_Number_People")
        await message.answer(answer_text,  reply_markup=edit_people_keyboard())
    elif message.text == EDIT_ORDER_BTNS[3]:
        answer_text = "“∞—Å—ã–Ω–∞—Ç—ã–Ω –±–∞“ì–∞“£—ã–∑ (‚Ç∏)? –ë–∞“ì–∞–Ω—ã —Å–∞–Ω —Ä–µ—Ç—ñ–Ω–¥–µ —Ç”©–º–µ–Ω–¥–µ –∂–∞–∑—Å–∞“£—ã–∑ –±–æ–ª–∞–¥—ã." if lang == 'kz' else "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞–∫–∞–∑–∞"
        await state.set_state("TaxiState:Edit_Summa")
        await message.answer(answer_text, reply_markup=edit_summa_keyboard())
    elif message.text == EDIT_ORDER_BTNS[4]:
        answer_text = "–¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä—ñ“£—ñ–∑?" if lang == 'kz' else "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
        await state.set_state("TaxiState:Edit_Tel_Nomer")
        await message.answer(answer_text, reply_markup=edit_tel_nomer_keyboard(language=lang))
    else:
        await message.answer("–¢–µ–∫ “õ–∞–∂–µ—Ç—Ç—ñ “±—è—à—ã“õ—Ç–∞—Ä–¥—ã —Ç–∞“£–¥–∞“£—ã–∑!")


@router.message(TaxiState.Edit_Location)
async def edit_order(message: Message, state: FSMContext):
    """
        üåç –®—ã“ì–∞—Ç—ã–Ω –º–µ–∫–µ–Ω–∂–∞–π
    """
    await state.update_data(location=message.text)
    keyboard = unfinished_keyboard(lang)
    location = (await state.get_data()).get("location")
    destination = (await state.get_data()).get("destination")
    number_people = (await state.get_data()).get("number_people")
    summa = (await state.get_data()).get("summa")
    tel_nomer = (await state.get_data()).get("tel_nomer")
    answer_kz = f"–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É “Ø—à—ñ–Ω —Ä–∞—Å—Ç–∞—É “õ–∞–∂–µ—Ç\n\n<b>“ö–∞–π–¥–∞–Ω</b>: {location}\n<b>“ö–∞–π–¥–∞</b>: {destination}\n<b>–ê–¥–∞–º —Å–∞–Ω—ã</b>: {number_people}\n<b>–ë–∞“ì–∞—Å—ã:</b>: {summa}‚Ç∏\n<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: {tel_nomer}\n\n–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã —Ä–∞—Å—Ç–∞—É “Ø—à—ñ–Ω - ‚úÖ –¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω —Ç–∞“£–¥–∞—É “õ–∞–∂–µ—Ç"
    answer_ru = f"–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å\n\n<b>–û—Ç–∫—É–¥–∞</b>: {location}\n<b>–ö—É–¥–∞</b>: {destination}\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤:</b>: {number_people}\n<b>–¶–µ–Ω–∞:</b>: {summa}‚Ç∏\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>: {tel_nomer}\n\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É - ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑"
    await state.set_state("TaxiState:UnFinished")
    if lang == 'kz':
        await message.answer(answer_kz, reply_markup=keyboard, parse_mode="HTML")
    else:
        await message.answer(answer_ru, reply_markup=keyboard, parse_mode="HTML")


@router.message(TaxiState.Edit_Destination)
async def edit_order_d(message: Message, state: FSMContext):
    """
        üåç –ë–∞—Ä–∞—Ç—ã–Ω –º–µ–∫–µ–Ω–∂–∞–π
    """
    await state.update_data(destination=message.text)
    keyboard = unfinished_keyboard(lang)
    location = (await state.get_data()).get("location")
    destination = (await state.get_data()).get("destination")
    number_people = (await state.get_data()).get("number_people")
    summa = (await state.get_data()).get("summa")
    tel_nomer = (await state.get_data()).get("tel_nomer")
    answer_kz = f"–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É “Ø—à—ñ–Ω —Ä–∞—Å—Ç–∞—É “õ–∞–∂–µ—Ç\n\n<b>“ö–∞–π–¥–∞–Ω</b>: {location}\n<b>“ö–∞–π–¥–∞</b>: {destination}\n<b>–ê–¥–∞–º —Å–∞–Ω—ã</b>: {number_people}\n<b>–ë–∞“ì–∞—Å—ã:</b>: {summa}‚Ç∏\n<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: {tel_nomer}\n\n–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã —Ä–∞—Å—Ç–∞—É “Ø—à—ñ–Ω - ‚úÖ –¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω —Ç–∞“£–¥–∞—É “õ–∞–∂–µ—Ç"
    answer_ru = f"–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å\n\n<b>–û—Ç–∫—É–¥–∞</b>: {location}\n<b>–ö—É–¥–∞</b>: {destination}\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤:</b>: {number_people}\n<b>–¶–µ–Ω–∞:</b>: {summa}‚Ç∏\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>: {tel_nomer}\n\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É - ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑"
    await state.set_state("TaxiState:UnFinished")
    if lang == 'kz':
        await message.answer(answer_kz, reply_markup=keyboard, parse_mode="HTML")
    else:
        await message.answer(answer_ru, reply_markup=keyboard, parse_mode="HTML")


@router.message(TaxiState.Edit_Number_People)
async def edit_order_n(message: Message, state: FSMContext):
    """
        üë• –ê–¥–∞–º —Å–∞–Ω—ã
    """
    msg = message.text
    if msg not in ["1", "2", "3", "4"]:
        answer_text = "–¢”©–º–µ–Ω–¥–µ –±–µ—Ä—ñ–ª–≥–µ–Ω —Ç“Ø–π–º–µ–ª–µ—Ä–¥—ñ “ì–∞–Ω–∞ –ø–∞–π–¥–∞–ª–∞–Ω—ã“£—ã–∑!" if lang == 'kz' else "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∏–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏!"
        return await message.answer(answer_text)

    await state.update_data(number_people=message.text)
    keyboard = unfinished_keyboard(lang)
    location = (await state.get_data()).get("location")
    destination = (await state.get_data()).get("destination")
    number_people = (await state.get_data()).get("number_people")
    summa = (await state.get_data()).get("summa")
    tel_nomer = (await state.get_data()).get("tel_nomer")
    answer_kz = f"–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É “Ø—à—ñ–Ω —Ä–∞—Å—Ç–∞—É “õ–∞–∂–µ—Ç\n\n<b>“ö–∞–π–¥–∞–Ω</b>: {location}\n<b>“ö–∞–π–¥–∞</b>: {destination}\n<b>–ê–¥–∞–º —Å–∞–Ω—ã</b>: {number_people}\n<b>–ë–∞“ì–∞—Å—ã:</b>: {summa}‚Ç∏\n<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: {tel_nomer}\n\n–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã —Ä–∞—Å—Ç–∞—É “Ø—à—ñ–Ω - ‚úÖ –¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω —Ç–∞“£–¥–∞—É “õ–∞–∂–µ—Ç"
    answer_ru = f"–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å\n\n<b>–û—Ç–∫—É–¥–∞</b>: {location}\n<b>–ö—É–¥–∞</b>: {destination}\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤:</b>: {number_people}\n<b>–¶–µ–Ω–∞:</b>: {summa}‚Ç∏\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>: {tel_nomer}\n\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É - ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑"
    await state.set_state("TaxiState:UnFinished")
    if lang == 'kz':
        await message.answer(answer_kz, reply_markup=keyboard, parse_mode="HTML")
    else:
        await message.answer(answer_ru, reply_markup=keyboard, parse_mode="HTML")

@router.message(TaxiState.Edit_Summa)
async def edit_order_s(message: Message, state: FSMContext):
    """
        üí∞ –ñ–æ–ª –∞“õ—ã—Å—ã
    """
    msg = message.text
    if not msg.isdigit():
        answer_text = "–ë–∞“ì–∞–Ω—ã —Å–∞–Ω —Ä–µ—Ç—ñ–Ω–¥–µ –∫”©—Ä—Å–µ—Ç—É “õ–∞–∂–µ—Ç!" if lang == 'kz' else "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞!"
        return await message.answer(answer_text)

    await state.update_data(summa=message.text)
    keyboard = unfinished_keyboard(lang)
    location = (await state.get_data()).get("location")
    destination = (await state.get_data()).get("destination")
    number_people = (await state.get_data()).get("number_people")
    summa = (await state.get_data()).get("summa")
    tel_nomer = (await state.get_data()).get("tel_nomer")
    answer_kz = f"–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É “Ø—à—ñ–Ω —Ä–∞—Å—Ç–∞—É “õ–∞–∂–µ—Ç\n\n<b>“ö–∞–π–¥–∞–Ω</b>: {location}\n<b>“ö–∞–π–¥–∞</b>: {destination}\n<b>–ê–¥–∞–º —Å–∞–Ω—ã</b>: {number_people}\n<b>–ë–∞“ì–∞—Å—ã:</b>: {summa}‚Ç∏\n<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: {tel_nomer}\n\n–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã —Ä–∞—Å—Ç–∞—É “Ø—à—ñ–Ω - ‚úÖ –¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω —Ç–∞“£–¥–∞—É “õ–∞–∂–µ—Ç"
    answer_ru = f"–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å\n\n<b>–û—Ç–∫—É–¥–∞</b>: {location}\n<b>–ö—É–¥–∞</b>: {destination}\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤:</b>: {number_people}\n<b>–¶–µ–Ω–∞:</b>: {summa}‚Ç∏\n<b>–ù–æ–º–µ—Ä —Ç–µ–ªÔøΩÔøΩ—Ñ–æ–Ω–∞</b>: {tel_nomer}\n\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É - ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑"
    await state.set_state("TaxiState:UnFinished")
    if lang == 'kz':
        await message.answer(answer_kz, reply_markup=keyboard, parse_mode="HTML")
    else:
        await message.answer(answer_ru, reply_markup=keyboard, parse_mode="HTML")

@router.message(TaxiState.Edit_Tel_Nomer)
async def edit_order_t(message: Message, state: FSMContext):
    """
        üì± –¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä
    """
    if message.contact:
        keyboard = unfinished_keyboard(lang)
        await state.update_data(tel_nomer=message.contact.phone_number)
        location = (await state.get_data()).get("location")
        destination = (await state.get_data()).get("destination")
        number_people = (await state.get_data()).get("number_people")
        summa = (await state.get_data()).get("summa")
        tel_nomer = (await state.get_data()).get("tel_nomer")
        answer_kz = f"–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É “Ø—à—ñ–Ω —Ä–∞—Å—Ç–∞—É “õ–∞–∂–µ—Ç\n\n<b>“ö–∞–π–¥–∞–Ω</b>: {location}\n<b>“ö–∞–π–¥–∞</b>: {destination}\n<b>–ê–¥–∞–º —Å–∞–Ω—ã</b>: {number_people}\n<b>–ë–∞“ì–∞—Å—ã:</b>: {summa}‚Ç∏\n<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: {tel_nomer}\n\n–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã —Ä–∞—Å—Ç–∞—É “Ø—à—ñ–Ω - ‚úÖ –¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂—ñ–±–µ—Ä—É –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω —Ç–∞“£–¥–∞—É “õ–∞–∂–µ—Ç"
        answer_ru = f"–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å\n\n<b>–û—Ç–∫—É–¥–∞</b>: {location}\n<b>–ö—É–¥–∞</b>: {destination}\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤:</b>: {number_people}\n<b>–¶–µ–Ω–∞:</b>: {summa}‚Ç∏\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>: {tel_nomer}\n\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É - ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑"
        await state.set_state("TaxiState:UnFinished")
        if lang == 'kz':
            await message.answer(answer_kz, reply_markup=keyboard, parse_mode="HTML")
        else:
            await message.answer(answer_ru, reply_markup=keyboard, parse_mode="HTML")
    else:
        answer_text = "–¢–µ–ª–µ—Ñ–æ–Ω —Ñ–æ—Ä–º–∞—Ç—ã “õ–∞—Ç–µ" if lang == 'kz' else "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞!"
        return await message.answer(answer_text)




CANCEL_ORDER_BTN = ["‚ùå –¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂–æ—é", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑"]
@router.message(TaxiState.UnFinished, lambda message: message.text in CANCEL_ORDER_BTN)
async def cancel_handler_uf(message: Message, state: FSMContext):
    """
        ‚ùå –¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –∂–æ—é
    """
    await state.clear()
    await message.answer("üöñ", reply_markup=main_menu_keyboard(lang))




